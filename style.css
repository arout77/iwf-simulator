/* Base theme variables (Dark by default) */
:root {
    --bg-primary: #1a202c;
    --bg-secondary: #2d3748;
    --text-color: #e2e8f0;
    --header-bg: #1a202c;
    --card-bg: #1a202c; /* Default card background */
    --card-border: #6809fb;
    --dropzone-bg: #13182691;
    --dropzone-border: #8a00bc;
    --roster-bg: rgb(53 0 76 / 23%); /* Glassmorphism background */
    --roster-border: rgba(255, 255, 255, 0.2);
    --matchsetup-border: #0037f1;
    --modal-bg: #010130;
    --modal-border: #8a00bc; /* Yellow-500 */
    --log-bg: #1a202c;
    --log-text: #e2e8f0;
    --log-info: #a0aec0; /* gray-400 */
    --log-action: #90cdf4; /* blue-300 */
    --log-damage: #fc8181; /* red-400 */
    --log-result: #ecc94b; /* yellow-400 */
    --button-primary-bg: #ecc94b; /* yellow-500 */
    --button-primary-text: #1a202c; /* gray-900 */
    --button-primary-hover-bg: #f6e05e; /* yellow-400 */
    --button-secondary-bg: #131826; /* gray-600 */
    --button-secondary-text: #ffffff;
    --button-secondary-hover-bg: #68707c; /* gray-500 */
    --footer-bg: #1a202c;
    --footer-text: #a0aec0; /* gray-400 */
    --glow-start: #720697;
    --glow-end: #002bff;
    --glow-mid: #ff00c8;

    /* Scrollbar colors */
    --scrollbar-thumb: #3958af;
    --scrollbar-track: #2d004d;
    --log-scrollbar-thumb: #6890ff;
    --log-scrollbar-track: #1a002e;
}

/* Light theme variables */
body[data-theme="light"] {
    --bg-primary: #f7fafc; /* Light gray */
    --bg-secondary: #edf2f7; /* Lighter gray */
    --text-color: #2d3748; /* Darker text */
    --header-bg: #ffffff;
    --card-bg: #ffffff;
    --card-border: #cbd5e0; /* Light border */
    --dropzone-bg: #e2e8f0;
    --dropzone-border: #cbd5e0;
    --roster-bg: rgba(255, 255, 255, 0.8); /* Lighter glassmorphism */
    --roster-border: rgba(0, 0, 0, 0.1);
    --matchsetup-border: #4299e1; /* Blue */
    --modal-bg: #ffffff;
    --modal-border: #4299e1; /* Blue */
    --log-bg: #f7fafc;
    --log-text: #2d3748;
    --log-info: #131826; /* gray-600 */
    --log-action: #3182ce; /* blue-600 */
    --log-damage: #e53e3e; /* red-600 */
    --log-result: #dd6b20; /* orange-600 */
    --button-primary-bg: #4299e1; /* blue-500 */
    --button-primary-text: #ffffff;
    --button-primary-hover-bg: #3182ce; /* blue-600 */
    --button-secondary-bg: #a0aec0; /* gray-400 */
    --button-secondary-text: #2d3748;
    --button-secondary-hover-bg: #cbd5e0; /* gray-300 */
    --footer-bg: #edf2f7;
    --footer-text: #718096; /* gray-500 */
    --glow-start: #667eea;
    --glow-end: #805ad5;
    --glow-mid: #d53f8c;
}

body {
    font-family: 'Inter', sans-serif;
    background-color: var(--bg-primary);
    color: var(--text-color);
    transition: background-color 0.3s ease, color 0.3s ease;
}
.container {
    max-width: 1400px;
}
.btn {
    @apply font-bold py-2 px-4 rounded-lg transition-all duration-200;
}
.btn-primary {
    background-color: var(--button-primary-bg);
    color: var(--button-primary-text);
    box-shadow: 0 4px 6px rgba(0, 0, 0, 0.1);
}
.btn-primary:hover {
    background-color: var(--button-primary-hover-bg);
    box-shadow: 0 6px 8px rgba(0, 0, 0, 0.15);
}
.btn-secondary {
    background-color: var(--button-secondary-bg);
    color: var(--button-secondary-text);
    box-shadow: 0 4px 6px rgba(0, 0, 0, 0.1);
}
.btn-secondary:hover {
    background-color: var(--button-secondary-hover-bg);
    box-shadow: 0 6px 8px rgba(0, 0, 0, 0.15);
}

#matchSetup {
    box-shadow: inset -3px 9px 108px 61px rgb(12 4 108 / 46%);
    border: 0px solid var(--matchsetup-border);
    background-image: url(/iwf-simulator/images/bg/arena2.jpg);
    background-repeat: no-repeat;
    background-size: cover;
}
/* Animated Background Elements */
.animated-blob {
    position: absolute;
    background: radial-gradient(circle, var(--color-start), var(--color-end));
    border-radius: 50%;
    filter: blur(100px);
    opacity: 0.3;
    animation: float-and-fade var(--duration) ease-in-out infinite alternate var(--delay);
    z-index: -100;
    pointer-events: none;
}
/* Custom scrollbar styles */
::-webkit-scrollbar {
    width: 12px; /* Width of the vertical scrollbar */
    height: 12px; /* Height of the horizontal scrollbar */
}

::-webkit-scrollbar-track {
    background: var(--scrollbar-track);
    border-radius: 10px;
}

::-webkit-scrollbar-thumb {
    background-color: var(--scrollbar-thumb);
    border-radius: 10px;
    border: 3px solid var(--scrollbar-track); /* Border around the thumb, matching the track color */
}

/* For Firefox */
html {
    scrollbar-color: var(--scrollbar-thumb) var(--scrollbar-track); /* thumb color track color */
    scrollbar-width: thin; /* auto, thin, or none */
}

#matchLog {
    background-color: var(--log-bg);
    color: var(--log-text);
    border-color: indigo;
    border-width: thick;
}
#matchLog::-webkit-scrollbar {
    width: 10px;
}
#matchLog::-webkit-scrollbar-track {
    background: var(--log-scrollbar-track);
}
#matchLog::-webkit-scrollbar-thumb {
    background-color: var(--log-scrollbar-thumb);
    border: 2px solid var(--log-scrollbar-track);
}
#matchLog {
    scrollbar-color: var(--log-scrollbar-thumb) var(--log-scrollbar-track);
}
#matchLog p {
    color: var(--log-text);
}
#matchLog p.text-gray-300 {
    color: var(--log-info);
}
#matchLog p.text-blue-300 {
    color: var(--log-action);
}
#matchLog p.text-red-400 {
    color: var(--log-damage);
}
#matchLog p.text-yellow-400 {
    color: var(--log-result);
}


/* Glassmorphism effect for the roster container */
#rosterContainer {
    background-color: var(--roster-bg);
    backdrop-filter: blur(10px); /* Frosted glass effect */
    -webkit-backdrop-filter: blur(10px); /* Safari support */
    border: 1px solid var(--roster-border); /* Subtle light border */
    box-shadow: inset -3px 9px 32px 20px rgba(0, 0, 0, 0.37); /* Shadow for depth */
}

/* Responsive adjustments to prevent horizontal scrolling */
.wrestler-roster-card-item {
    flex-shrink: 0; /* Prevent cards from shrinking too much */
    width: calc(33.333% - 1rem); /* Adjust width for 3 columns on larger screens, accounting for gap */
    margin-bottom: 1rem; /* Add some vertical spacing */
}

@media (max-width: 1024px) { /* Adjust for medium screens (e.g., tablets) */
    .wrestler-roster-card-item {
        width: calc(50% - 1rem); /* 2 columns */
    }
}

@media (max-width: 768px) { /* Adjust for small screens (e.g., mobile) */
    .wrestler-roster-card-item {
        width: calc(100% - 1rem); /* 1 column */
    }
}
.wrestler-roster {
    display: flex;
    flex-wrap: wrap;
    gap: 1rem; /* Space between cards */
    justify-content: center; /* Center cards when fewer than full row */
}
#rosterContainer {
    background-color: var(--roster-bg);
    backdrop-filter: blur(10px);
    -webkit-backdrop-filter: blur(10px);
    border: 1px solid var(--roster-border);
    box-shadow: inset -3px 9px 32px 20px rgba(0, 0, 0, 0.37);
}
/* Shiny CTA button */
:root {
  --shiny-cta-bg: var(--bg-primary);
  --shiny-cta-bg-subtle: var(--bg-secondary);
  --shiny-cta-fg: var(--text-color);
  --shiny-cta-highlight: var(--glow-end);
  --shiny-cta-highlight-subtle: var(--glow-start);
}

@property --gradient-angle {
  syntax: "<angle>";
  initial-value: 0deg;
  inherits: false;
}
@property --gradient-angle-offset {
  syntax: "<angle>";
  initial-value: 0deg;
  inherits: false;
}
@property --gradient-percent {
  syntax: "<percentage>";
  initial-value: 5%;
  inherits: false;
}
@property --gradient-shine {
  syntax: "<color>";
  initial-value: white;
  inherits: false;
}

.shiny-frame {
  --animation: gradient-angle linear infinite;
  --duration: 3s;
  --shadow-size: 2px;
  isolation: isolate;
  position: relative;
  overflow: hidden;
  cursor: pointer;
  outline-offset: 4px;
  /* padding: 1.25rem 2.5rem; */
  font-family: inherit;
  font-size: 1.125rem;
  line-height: 1.2;
  border: 1px solid transparent;
  border-radius: 360px;
  color: var(--shiny-cta-fg);
  background: linear-gradient(var(--shiny-cta-bg), var(--shiny-cta-bg)) padding-box, conic-gradient(from calc(var(--gradient-angle) - var(--gradient-angle-offset)), transparent, var(--shiny-cta-highlight) var(--gradient-percent), var(--gradient-shine) calc(var(--gradient-percent) * 2), var(--shiny-cta-highlight) calc(var(--gradient-percent) * 3), transparent calc(var(--gradient-percent) * 4)) border-box;
  box-shadow: inset 0 0 0 1px var(--shiny-cta-bg-subtle);
}

.shiny-cta {
  --animation: gradient-angle linear infinite;
  --duration: 3s;
  --shadow-size: 2px;
  isolation: isolate;
  position: relative;
  overflow: hidden;
  cursor: pointer;
  outline-offset: 4px;
  padding: 1.25rem 2.5rem;
  font-family: inherit;
  font-size: 1.125rem;
  line-height: 1.2;
  border: 1px solid transparent;
  border-radius: 360px;
  color: var(--shiny-cta-fg);
  background: linear-gradient(var(--shiny-cta-bg), var(--shiny-cta-bg)) padding-box, conic-gradient(from calc(var(--gradient-angle) - var(--gradient-angle-offset)), transparent, var(--shiny-cta-highlight) var(--gradient-percent), var(--gradient-shine) calc(var(--gradient-percent) * 2), var(--shiny-cta-highlight) calc(var(--gradient-percent) * 3), transparent calc(var(--gradient-percent) * 4)) border-box;
  box-shadow: inset 0 0 0 1px var(--shiny-cta-bg-subtle);
}
.shiny-cta::before, .shiny-cta::after,
.shiny-cta span::before {
  content: "";
  pointer-events: none;
  position: absolute;
  inset-inline-start: 50%;
  inset-block-start: 50%;
  translate: -50% -50%;
  z-index: -1;
}
.shiny-cta:active {
  translate: 0 1px;
}

/* Dots pattern */
.shiny-cta::before {
  --size: calc(100% - var(--shadow-size) * 3);
  --position: 2px;
  --space: calc(var(--position) * 2);
  width: var(--size);
  height: var(--size);
  background: radial-gradient(circle at var(--position) var(--position), white calc(var(--position) / 4), transparent 0) padding-box;
  background-size: var(--space) var(--space);
  background-repeat: space;
  mask-image: conic-gradient(from calc(var(--gradient-angle) + 45deg), black, transparent 10% 90%, black);
  border-radius: inherit;
  opacity: 0.4;
  z-index: -1;
}

/* Inner shimmer */
.shiny-cta::after {
  --animation: shimmer linear infinite;
  width: 100%;
  aspect-ratio: 1;
  background: linear-gradient(-50deg, transparent, var(--shiny-cta-highlight), transparent);
  mask-image: radial-gradient(circle at bottom, transparent 40%, black);
  opacity: 0.6;
}

.shiny-cta span {
  z-index: 1;
}
.shiny-cta span::before {
  --size: calc(100% + 1rem);
  width: var(--size);
  height: var(--size);
  box-shadow: inset 0 -1ex 2rem 4px var(--shiny-cta-highlight);
  opacity: 0;
}

/* Animate */
.shiny-cta {
  --transition: 800ms cubic-bezier(0.25, 1, 0.5, 1);
  transition: var(--transition);
  transition-property: --gradient-angle-offset, --gradient-percent, --gradient-shine;
}
.shiny-cta, .shiny-cta::before, .shiny-cta::after {
  animation: var(--animation) var(--duration), var(--animation) calc(var(--duration) / 0.4) reverse paused;
  animation-composition: add;
}
.shiny-cta span::before {
  transition: opacity var(--transition);
  animation: calc(var(--duration) * 1.5) breathe linear infinite;
}

.shiny-cta:is(:hover, :focus-visible) {
  --gradient-percent: 20%;
  --gradient-angle-offset: 95deg;
  --gradient-shine: var(--shiny-cta-highlight-subtle);
}
.shiny-cta:is(:hover, :focus-visible), .shiny-cta:is(:hover, :focus-visible)::before, .shiny-cta:is(:hover, :focus-visible)::after {
  animation-play-state: running;
}
.shiny-cta:is(:hover, :focus-visible) span::before {
  opacity: 1;
}

@keyframes gradient-angle {
  to {
    --gradient-angle: 360deg;
  }
}
@keyframes shimmer {
  to {
    rotate: 360deg;
  }
}
@keyframes breathe {
  from, to {
    scale: 1;
  }
  50% {
    scale: 1.2;
  }
}

/* Keyframes for floating and fading animation */
@keyframes float-and-fade {
    0% {
        transform: translate(var(--x-start), var(--y-start)) scale(var(--scale-start));
        opacity: 0.2;
    }
    50% {
        transform: translate(var(--x-mid), var(--y-mid)) scale(var(--scale-mid));
        opacity: 0.4;
    }
    100% {
        transform: translate(var(--x-end), var(--y-end)) scale(var(--scale-end));
        opacity: 0.2;
    }
}

/* RGB effect */
.glow-on-hover {
  cursor: pointer;
  position: relative;
  z-index: 0;
}

.glow-on-hover:before {
  content: "";
  background: linear-gradient(45deg, red, #ff7300, #fffb00, #48ff00, #00ffd5, #002bff, #7a00ff, #ff00c8, red);
  position: absolute;
  top: -2px;
  left: -2px;
  background-size: 400%;
  z-index: -1;
  filter: blur(5px);
  width: calc(100% + 4px);
  height: calc(100% + 4px);
  animation: glowing 20s linear infinite;
  opacity: 0;
  transition: opacity 0.3s ease-in-out;
}

.glow-on-hover:active:after {
  background: transparent;
}

.glow-on-hover:hover:before {
  opacity: 1;
}

.glow-on-hover:after {
  z-index: -1;
  content: "";
  position: absolute;
  width: 100%;
  height: 100%;
  left: 0;
  top: 0;
}

@keyframes glowing {
  0% {
    background-position: 0 0;
  }
  50% {
    background-position: 400% 0;
  }
  100% {
    background-position: 0 0;
  }
}

.grad-box {
  display: flex;
  align-items: center;
  // width: 50vw;
  width: 90%;
  margin: auto;
  max-width: 22em;

  position: relative;
  padding: 30% 2em;
  box-sizing: border-box;

  $border: 5px;
  color: #FFF;
  background: #000;
  background-clip: padding-box; /* !importanté */
  border: solid $border transparent; /* !importanté */
  border-radius: 1em;
}
.grad-box:before {
    content: '';
    position: absolute;
    top: 0; right: 0; bottom: 0; left: 0;
    z-index: -1;
    margin: -$border; /* !importanté */
    border-radius: inherit; /* !importanté */
    background: linear-gradient(to right, red, orange);
}

/* Add this rule for drop zones */
.drop-zone {
    z-index: 10; /* Ensure drop zones are above most other content */
    position: relative; /* z-index only works on positioned elements */
    background-color: var(--dropzone-bg);
    border-color: var(--dropzone-border);
    transition: background-color 0.3s ease, border-color 0.3s ease;
}
.drop-zone.border-yellow-500 { /* Keep specific highlight for drag-over */
    border-color: #ecc94b; /* yellow-500 */
    background-color: #131826; /* gray-700 */
}


/* Wrestler card hover effect */
.wrestler-card {
    transition: all 0.3s ease-in-out; /* Smooth transition for all properties */
    position: relative; /* Needed for pseudo-elements */
    overflow: hidden; /* Ensures gradient border doesn't spill out */
    background: radial-gradient(circle, rgba(81, 0, 112, 1) 0%, rgba(5, 32, 82, 1) 100%);
    border-color: var(--card-border); /* Use theme variable for border */
}

.wrestler-card::before {
    content: '';
    position: absolute;
    inset: 0;
    padding: 2px; /* This creates the border thickness, matching border-2 (which is 2px) */
    background: linear-gradient(45deg, #4a00e0, #8e2de2); /* Blue to purple gradient */
    -webkit-mask: linear-gradient(#fff 0 0) content-box, linear-gradient(#fff 0 0);
    mask: linear-gradient(#fff 0 0) content-box, linear-gradient(#fff 0 0);
    -webkit-mask-composite: exclude;
    mask-composite: exclude;
    border-radius: inherit; /* Inherit border-radius from parent */
    opacity: 0; /* Initially hidden */
    transition: opacity 0.3s ease-in-out; /* Smooth transition for opacity */
    z-index: -1; /* Behind the card content */
}

.wrestler-card:hover::before {
    opacity: 1; /* Show gradient border on hover */
}

.wrestler-card:hover {
    box-shadow: 0 0 20px rgba(74, 0, 224, 0.6); /* Optional: add a glow effect */
    border-color: #8d43ff;
}

/* Modal styling */
.modal-content {
    background-color: var(--modal-bg);
    border-color: var(--modal-border);
    transition: background-color 0.3s ease, border-color 0.3s ease;
}
.modal-content h2, .modal-content h3 {
    color: var(--log-result); /* Use a consistent highlight color for titles */
}
.modal-content p {
    color: var(--log-info);
}
.modal-content .close-button {
    color: var(--text-color);
}
.modal-content .close-button:hover {
    color: var(--button-primary-hover-bg);
}

.modal {
    background-color: rgba(0, 0, 0, 0.8); /* Semi-transparent black overlay */
}

/* Modal Overlay Styles */
.modal-overlay {
    position: fixed;
    inset: 0;
    background-color: rgba(0, 0, 0, 0.8); /* Semi-transparent black */
    z-index: 49; /* Lower than modal (z-50) but higher than main content */
    transition: opacity 0.3s ease-in-out;
}

.card {
  color: white;
  /* letter-spacing: 5px;
  text-shadow: 0 0 10px black; */
  margin: 0 auto 0;
  position: relative;
  background: transparent;
  margin-bottom: 100px;
}

.card small {
  text-transform: none;
}

/* Rainbow glow - STARTS */
.rainbowGlow::before,
.rainbowGlow::after {
  content: "";
  position: absolute;
  left: -5px;
  top: -5px;
  background: linear-gradient(
    45deg,
    #ff0000,
    #ff8700,
    #ffff00,
    #25ff00,
    #00ffe9,
    #0032ff,
    #9800ff,
    #f200ff,
    #ff0000,
    #ff8700,
    #ffff00,
    #25ff00,
    #00ffe9,
    #0032ff
  );
  background-size: 400%;
  width: calc(100% + 10px);
  height: calc(100% + 10px);
  z-index: -1;
  animation: animateBorder 3s linear infinite;
}

@keyframes animateBorder {
  0% {
    background-position: 0% 50%;
  }
  100% {
    background-position: 89% 50%;
  }
}
.rainbowGlow::before {
  box-shadow: 0 0 5px black;
}
.rainbowGlow::after {
  filter: blur(40px);
  z-index: -2;
  /*   opacity: 0.5; */
}
/* Rainbow glow - ENDS */

/* White glow - STARTS */
:root {
  --white08: rgba(255, 255, 255, 0.8);
  --white05: rgba(255, 255, 255, 0.5);
  --white009: rgba(255, 255, 255, 0.09);
  --white001: rgba(255, 255, 255, 0.01);
  --borderSize: 10px;
}
.whiteGlow {
  border: black 1px solid;
  box-shadow: 0 0 0 calc(var(--borderSize) / 2) rgba(255, 255, 255, 0.05);
}

.whiteGlow::before,
.whiteGlow::after {
  content: "";
  position: absolute;
  left: calc((var(--borderSize) / 2) * -1);
  top: calc((var(--borderSize) / 2) * -1);
  background: linear-gradient(
    45deg,
    var(--white001),
    var(--white001),
    var(--white001),
    var(--white001),
    var(--white001),
    var(--white001),
    var(--white001),
    var(--white001),
    var(--white001),
    var(--white001),
    var(--white001),
    var(--white001),
    var(--white001),
    var(--white009),
    var(--white05),
    var(--white08),
    var(--white05),
    var(--white009),
    var(--white001),
    var(--white001),
    var(--white001),
    var(--white001),
    var(--white001),
    var(--white001),
    var(--white001),
    var(--white001),
    var(--white001),
    var(--white001),
    var(--white001),
    var(--white001),
    var(--white001)
  );
  background-size: 300%;
  width: calc(100% + var(--borderSize));
  height: calc(100% + var(--borderSize));
  animation: whitePulsatingBorder 1.7s ease-in-out infinite;
}

.whiteGlow::before {
  z-index: -1;
  box-shadow: 0 0 0 1 black;
}
.whiteGlow::after {
  filter: blur(40px);
  z-index: -2;
  /*   opacity: 0.5; */
}

@keyframes whitePulsatingBorder {
  0% {
    background-position: 0% 50%;
  }
  100% {
    background-position: 150% 50%;
  }
}
/* White glow - ENDS */

/* Conical Pulse - STARTS */
.conicalPulse {
  overflow: hidden;
  background: transparent;
  border: rgba(255, 255, 255, 0.09) 1px solid;
}
.conicalPulse::before,
.conicalPulse::after {
  z-index: -1;
  content: "";
  position: absolute;
  left: 50%;
  top: 50%;
  width: 600%;
  height: 600%;
  transform: translate(-50%, -50%);
}
.conicalPulse::before {
  animation: rotate 2s linear forwards infinite;
  background: conic-gradient(transparent, #fff 70deg, transparent 71deg);
}
.conicalPulse::after {
  background: linear-gradient(0deg, #000, #333);
  width: calc(100% - 10px);
  height: calc(100% - 10px);
  border: rgba(255, 255, 255, 0.01) 1px solid;
}
@keyframes rotate {
  100% {
    transform: translate(-50%, -50%) rotate(360deg);
  }
}
/* Conical Pulse - ENDS */

/* Conical Rainbow - STARTS */
.conicalRainbow {
  overflow: hidden;
}
.conicalRainbow::before {
  content: "";
  position: absolute;
  height: 500%;
  width: 500%;
  background: conic-gradient(
    #fd004c,
    #fe9000,
    #fff020,
    #3edf4b,
    #3363ff,
    #b102b7,
    #fd004c
  );
  left: -200%;
  top: -200%;
  animation: rainbowRotate 1.5s linear forwards infinite;
}
@keyframes rainbowRotate {
  100% {
    transform: rotate(360deg);
  }
}
.conicalRainbow::after {
  content: "";
  position: absolute;
  inset: 4px;
  background: linear-gradient(0deg, rgb(31, 15, 89), rgb(19, 0, 56));
}
/* Conical Rainbow - ENDS */

/* Conical Rainbow Pulse - STARTS */
.conicalRainbowPulse {
  overflow: hidden;
}
.conicalRainbowPulse::before {
  content: "";
  position: absolute;
  height: 500%;
  width: 500%;
  background: conic-gradient(
    transparent,
    #fd004c 51deg,
    #fd004c 52deg,
    transparent 52deg,
    #fe9000 102deg,
    #fe9000 103deg,
    transparent 103deg,
    #fff020 153deg,
    #fff020 154deg,
    transparent 154deg,
    #3edf4b 204deg,
    #3edf4b 205deg,
    transparent 205deg,
    #7192ff 255deg,
    #3363ff 256deg,
    transparent 256deg,
    #b102b7 306deg,
    #85048a 307deg,
    transparent 307deg,
    #bb0707 359deg,
    #bb0707 360deg,
    transparent 360deg
  );
  left: -200%;
  top: -200%;
  animation: rainbowRotate 4s linear forwards infinite;
}
@keyframes rainbowRotate {
  100% {
    transform: rotate(360deg);
  }
}
.conicalRainbowPulse::after {
  content: "";
  position: absolute;
  inset: 4px;
  background: linear-gradient(0deg, #000, #333);
}
/* Conical Rainbow Pulse - ENDS */

/* Conical Repeating Pulse - STARTS */
.conicalRepeatingPulse {
  background: repeating-conic-gradient(
    from var(--angle),
    rgb(255, 0, 0) 0%,
    rgb(255, 0, 0) 5%,
    transparent 5%,
    transparent 40%,
    rgb(255, 0, 0) 50%
  );
  animation: neonLightsRotate 4s linear forwards infinite;
  border: 1px solid #171717;
}
.conicalRepeatingPulse::before,
.conicalRepeatingPulse::after,
.cardContent {
  position: absolute;
}
.conicalRepeatingPulse::before,
.conicalRepeatingPulse::after {
  content: "";
}
.conicalRepeatingPulse::before {
  width: 100%;
  height: 100%;
  background: repeating-conic-gradient(
    from var(--angle),
    rgb(0, 0, 255) 0%,
    rgb(0, 0, 255) 5%,
    transparent 5%,
    transparent 40%,
    rgb(0, 0, 255) 50%
  );
  animation: neonLightsRotate 4s linear forwards infinite;
  /*   filter: drop-shadow(0 0 15px rgb(0, 0, 255)); */
  animation-delay: -1s;
}

.conicalRepeatingPulse::after {
  inset: 4px;
  background: linear-gradient(0deg, #000, #333);
}

.conicalRepeatingPulse::after,
.cardContent {
  inset: 4px;
}

.cardContent {
  z-index: 1;
  border: #171717 1px solid;
  display: flex;
  flex-direction: column;
  align-items: center;
  justify-content: center;
}

@keyframes neonLightsRotate {
  from {
    --angle: 0deg;
  }
  to {
    --angle: 360deg;
  }
}
/* Conical Repeating Pulse - ENDS */

/* Conical Glass - STARTS */
/* Reference: https://codepen.io/michellebarker/pen/gOMBPQj */
@property --angle {
  syntax: "<angle>";
  initial-value: 90deg;
  inherits: true;
}

:root {
  --angle: 90deg;
  --c1: rgba(255, 255, 255, 0.75);
  --c2: rgba(0, 0, 0, 0.75);
}

.conicalRepeatingPulse small,
.conicalGlass small {
  color: #888;
  font-size: x-small;
  letter-spacing: 2px;
}

.conicalGlass {
  flex-direction: column;
  border: 2px solid;
  border-image: conic-gradient(
      from var(--angle),
      var(--c2),
      var(--c1) 0.1turn,
      var(--c1) 0.15turn,
      var(--c2) 0.25turn
    )
    30;
  animation: borderRotate 2.5s linear infinite forwards;
  box-shadow: inset 0 0 0 1px black;
}
@keyframes borderRotate {
  100% {
    --angle: 420deg;
  }
}
/* Conical Glass - ENDS */
